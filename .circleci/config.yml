version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.5.3-stretch-node
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        RAILS_ENV: test
        NOKOGIRI_USE_SYSTEM_LIBRARIES: true
    - image: solr:7
      command: bin/solr -cloud -noprompt -f -p 8983
    steps:
    - checkout

    # Upgrade bundler
    - run:
        name: Install Bundler
        command: gem install bundler

    # Which version of bundler?
    - run:
        name: Which bundler?
        command: bundle -v

    # Restore bundle cache
    - restore_cache:
        keys:
        - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
        - rails-demo-bundle-v2-

    - run:
        name: Bundle Install
        command: bundle check || bundle install

    # Store bundle cache
    - save_cache:
        key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle

    - run:
        name: Test prepare
        command: bin/rails db:test:prepare

    # Create a Solr collection
    - run:
        name: Load config into SolrCloud
        command: |
          cd solr/config
          zip -1 -r solr_config.zip ./*
          curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8983/solr/admin/configs?action=UPLOAD&name=dlme"
          curl -H 'Content-type: application/json' http://localhost:8983/api/collections/ -d '{create: {name: dlme, config: dlme, numShards: 1}}'

    - run:
        name: Check styles using rubocop
        command: bundle exec rubocop

    # Run rspec in parallel
    - run:
        name: Run rspec in parallel
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)


    # Save test results for timing analysis
    - store_test_results:
        path: test_results

  register_image:
    docker:
    - image: circleci/buildpack-deps:stretch
    steps:
    - setup_remote_docker:
        version: 18.05.0-ce
    - checkout
    - run:
        name: Build Image & Register Task
        command: |
          docker build . -f docker/Dockerfile -t suldlss/dlme:latest --build-arg SECRET_KEY_BASE=$MASTER_KEY
          docker build . -f docker/Dockerfile.worker -t suldlss/dlme-worker:latest
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push suldlss/dlme:latest
          docker push suldlss/dlme-worker:latest

workflows:
  version: 2

  build:
    jobs:
    - build:
        filters:
          branches:
            ignore: master
    - register_image:
        requires:
        filters:
          branches:
            only: master
